.mainContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: #f9f9f9;
  padding: 20px;
  height: 100vh;
}

.pageTitle {
  width: 100%;
  font-size: 3rem;
  color: #333;
  text-align: center;
  margin-bottom: 10px;
  font-weight: bold;
}

.colorTags {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 20px;
}

.colorTag {
  padding: 5px 10px;
  border-radius: 5px;
  color: #292929;
  font-size: 0.8rem;
  font-weight: bold;
  display: inline-block;
}

.section {
  /* center this section */
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  max-width: 1200px;
  margin-bottom: 10px;
}

.cardGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, 55px); /* Fixed card size */
  grid-auto-rows: 55px; /* Set a fixed row height */
  gap: 8px; /* Fixed gap value */
  width: fit-content; /* Adjust to content width */
  max-width: 100%;
}
@media (min-width: 1300px) {
      .cardGrid {
          grid-template-columns: repeat(auto-fit, 60px); /* Larger card size for larger screens */
           grid-auto-rows: 60px; /* Set a fixed row height */
          gap: 10px; /* Larger gap for larger screens */
      }
  }

.card {
  perspective: 1000px;
  width: 55px; /* Fixed card width */
  height: 55px; /* Fixed card height */
  position: relative;
  cursor: pointer;
}
  @media (min-width: 1300px) {
      .card {
           width: 60px; /* Larger card width for larger screens */
           height: 60px; /* Larger card height for larger screens */
       }
  }

.cardFront, .cardBack {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  border-radius: 10px;
  transition: transform 0.6s;
  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);
}

.card:hover .cardFront, 
.card:hover .cardBack {
box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* Stronger shadow on hover */
}

.cardFront {
  background-color: #f1f1f1;
  color: #000;
}

.cardBack {
  background-color: #000;
  color: #fff;
  transform: rotateY(180deg);
}

/* .flipped .cardFront {
  transform: rotateY(180deg);
}

.flipped .cardBack {
  transform: rotateY(0deg);
} */

.letter {
  font-size: 2.0rem;
}

/* Divider styling */
.divider {
  width: 100%;
  text-align: center;
  margin: 20px 0;
}

.divider h2 {
  font-size: 1.5rem;
  color: #333;
  padding: 10px 0;
  border-top: 2px solid #ccc;
  border-bottom: 2px solid #ccc;
  display: inline-block;
  background-color: #f9f9f9;
  width: 100%;
}

.redBackground {
  background-color: #ffffcd;
}
.greenBackground {
  background-color: #7fffd4;
}
.blueBackground {
  background-color: #ffd700;
}


.straight {
  display: inline-block;
  writing-mode: vertical-rl; /* Makes the text display vertically */
  font-size: 0.4em; /* Smaller size for phonetic symbols */
  margin-left: 4px;
  transform: rotate(180);
  line-height: 1.2em; /* Adjusts spacing between the vertical symbols */
  vertical-align: middle
}

.punctuation {
  font-size: 0.5em; /* Keeps punctuation the same size as the main text */
  /* Make this a little under to match the vertical text */
  vertical-align: -0.2em;
  
}

.glow {
  background-color: rgba(255, 0, 0, 0.304);
  box-shadow: 0 0 50px rgb(255, 0, 0); /* Change color as needed */
  animation: glow-animation 1s infinite alternate; /* Add animation */
}

@keyframes glow-animation {
  from {
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
  }
  to {
    box-shadow: 0 0 20px rgba(255, 0, 0, 1);
  }
}


/* For cards that should animate when flipping */
.flipped .cardFront {
  transform: rotateY(180deg);
  transition: transform 0.6s;
}

.flipped .cardBack {
  transform: rotateY(0deg);
  transition: transform 0.6s;
}

/* For cards that should flip instantly without animation */
.flippedNoAnimation .cardFront {
  transform: rotateY(180deg);
  transition: none;
}

.flippedNoAnimation .cardBack {
  transform: rotateY(0deg);
  transition: none;
}

.rotatedSymbol {
  display: inline-block;
  transform: rotate(270deg) scale(1, -1); /* Rotate and scale the symbol */

}